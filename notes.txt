1a/ Recuperer la liste va
1b/ Creer le compteur result
2/ dupliquer str -> str2
3/ stop = strnstr(str2, "%", strlen(str2))
4/ tant que stop != NULL
	4a/ to_print = substr(str2, 0, stop - str2)
	4b/ putstr(to_print)
	4c/ free(to_print)
	4c/ 
	
free(str2);



# Avec strchr iteratif

int manage_format(char c, va_list *a)
	if (c == 'c')
		return (ft_putchar_size((char)va_arg(*a, char)));
	if (c == 's')
		return (ft_putstr_size(va_arg(*a, char *)));
	if (c == 'd' || c == 'i')
		convert = ft_itoa(va_arg(*a, int));
		return (ft_putstr_size(convert));
	if (c == 'p')
		???
	if (c == 'u')
		???
	if (c == 'x')
		???
	if (c == 'X')
		???
	if (c == '%')
		return (ft_putstr_size("%"));
	

int	ft_printf(str, ...)
1a/ Recuperer la liste va
1b/ Creer le compteur result
2/ dupliquer str -> str2
3/ ptr = strchr(str2, '%')
4/ while (ptr != NULL)
	4a/ *ptr = '\0'
	4b/ result += ft_strlen(str2)
	4c/ ft_putstr(str2);
	4d/ result += manage_format(*(ptr + 1), &arg);
free(str2)
	

En recursion


